<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boundary</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//exclaim points

if place_meeting(x,y,obj_player1) 
|| place_meeting(obj_pianiboundright.x,obj_pianiboundright.y,obj_player1)
{
    obj_puzz2.p1exclaim = true;
}
else
{
    obj_puzz2.p1exclaim = false;
}


if place_meeting(x,y,obj_player2) 
|| place_meeting(obj_pianiboundright.x,obj_pianiboundright.y,obj_player2)
{
    obj_puzz2.p2exclaim = true;
}
else
{
    obj_puzz2.p2exclaim = false;
}


if place_meeting(x,y,obj_player3) 
|| place_meeting(obj_pianiboundright.x,obj_pianiboundright.y,obj_player3)
{
    obj_puzz2.p3exclaim = true;
}
else
{
    obj_puzz2.p3exclaim = false;
}



if place_meeting(x,y,obj_player4) 
|| place_meeting(obj_pianiboundright.x,obj_pianiboundright.y,obj_player4)
{
    obj_puzz2.p4exclaim = true;
}
else
{
    obj_puzz2.p4exclaim = false;
}

//action points

if place_meeting(x,y,obj_player1)
{
    if obj_player1.key_action_press
    {
        obj_puzz2.a_lift = true;
        obj_player1.state = 'aim';
    }
    
    if obj_player1.key_action_release
    {
        obj_puzz2.a_lift = false;
        obj_player1.state = 'idle';
    }
}

if place_meeting(x,y,obj_player2)
{
    if obj_player2.key_action_press
    {
        obj_puzz2.a_lift = true;
        obj_player2.state = 'aim';
    }
    
    if obj_player2.key_action_release
    {
        obj_puzz2.a_lift = false;
        obj_player2.state = 'idle';
    }
}

if place_meeting(x,y,obj_player3)
{
    if obj_player3.key_action_press
    {
        obj_puzz2.a_lift = true;
        obj_player3.state = 'aim';
    }
    
    if obj_player3.key_action_release
    {
        obj_puzz2.a_lift = false;
        obj_player3.state = 'idle';
    }
}

if place_meeting(x,y,obj_player4)
{
    if obj_player4.key_action_press
    {
        obj_puzz2.a_lift = true;
        obj_player4.state = 'aim';
    }
    
    if obj_player4.key_action_release
    {
        obj_puzz2.a_lift = false;
        obj_player4.state = 'idle';
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
