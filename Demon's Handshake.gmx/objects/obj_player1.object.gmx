<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 'idle';
image_speed = 0.25;
flash = false;
facing = 'right';
bullet = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state = 'idle'
{
    sprite_index = spr_player1;
     if keyboard_check(ord('A'))//variable
    {
        state = 'left';
    }
    
    if keyboard_check(ord('D'))
    {
        state = 'right';
    }
    
    if keyboard_check(ord('C'))
    {
        state = 'draw';
    }
}

if state = 'left'
{
    
    sprite_index = spr_player1_walk;
    image_xscale = -1;
    facing = 'left';
    if keyboard_check(ord('A'))
    {
        x -=1; //variable spd
    } 
    else
    {
    state = 'idle';
    }
}

if state = 'right'
{
    
    sprite_index = spr_player1_walk;
    image_xscale = 1;
    facing = 'right';
    if keyboard_check(ord('D'))
    {
        x += 1;
    } 
    else
    {
    state = 'idle';
    }
}

if state = 'draw'
{
    if keyboard_check(ord('C'))
    {
        sprite_index = spr_player1_draw;
        if keyboard_check_pressed(ord('V')) &amp;&amp; bullet = 1
        {
            flash = true;
            bullet -= 1;
            if facing = 'right'
            {
            if !instance_exists(obj_bulletR){instance_create(x,y-8,obj_bulletR)}
            }
                        
            if facing = 'left'
            {
            if !instance_exists(obj_bulletR){instance_create(x,y-8,obj_bulletL)}
            }
        }
    }
    else
    {
    state = 'idle';
    }
    
}

//col
if place_meeting(x,y,obj_key)
{
    global.player1_key +=1;
    global.key_total += 1;
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flash = true
{
draw_rectangle(0,0,1600,900,false);
flash = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
