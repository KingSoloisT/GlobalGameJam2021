<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shelfshake = 0; //When this variable hits 15 the key will fall from the shelf.
shelfkeycollected = false;
global.playercount = 0;
//CREATE SHELF
instance_create(obj_puzz1.x + 80,obj_puzz1.y + 45, obj_shelf);


//CREATE PUZZLE 1 SPECIFIC KEY
if !instance_exists(obj_puzz1key)
{
    instance_create(obj_shelf.x,obj_shelf.y-3,obj_puzz1key);
}


//set player check variables
player1 = false;
player2 = false;
player3 = false;
player4 = false;

p1exclaim = false;
p2exclaim = false;
p3exclaim = false;
p4exclaim = false;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GameControls(obj_puzz1); //&lt;-----Initiate controller controls

// CHECK WHICH PLAYERS ARE IN THE ROOM
if instance_exists(obj_player1)
{
    player1=true;
}
if instance_exists(obj_player2)
{
    player2=true;
}
if instance_exists(obj_player3)
{
    player3=true;
}
if instance_exists(obj_player4)
{
    player4=true;
}

//PLAYER 1 ENTERING SHELF SHAKE AREA
if player1 = true 
&amp;&amp; (obj_player1.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player1.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player1.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player1.y &lt;= obj_puzz1.y +74)  //&lt;---set vertical distance
{    
    if (obj_player1.x &gt;= obj_shelf.x -20)
    &amp;&amp; (obj_player1.x &lt;= obj_shelf.x -10)
    &amp;&amp; (obj_player1.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player1.y &lt;= obj_puzz1.y +74) //&lt;--pushing up the LEFT side of the shelf
    {   
        if (obj_player1.key_action_press) &amp;&amp; (obj_shelf.image_index != 0) //x button
        {
            obj_shelf.image_index = 0;
            shelfshake += 1;
        }
    }
    
    if (obj_player1.x &gt;= obj_shelf.x +10) 
    &amp;&amp; (obj_player1.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player1.y &lt;= obj_puzz1.y +74)//&lt;--pushing up the RIGHT side of the shelf
    {   
        if (obj_player1.key_action_press) &amp;&amp; (obj_shelf.image_index != 2)//x button
        {
            obj_shelf.image_index = 2;
            shelfshake += 1;
        }
    }
}

//PLAYER 2 ENTERING SHELF SHAKE AREA
if player2 = true 
&amp;&amp; (obj_player2.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player2.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player2.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player2.y &lt;= obj_puzz1.y +74)  //&lt;---set vertical distance
{    
    if (obj_player2.x &gt;= obj_shelf.x -20)
    &amp;&amp; (obj_player2.x &lt;= obj_shelf.x -10)
    &amp;&amp; (obj_player2.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player2.y &lt;= obj_puzz1.y +74) //&lt;--pushing up the LEFT side of the shelf
    {   
        if (obj_player2.key_action_press) &amp;&amp; (obj_shelf.image_index != 0) //x button
        {
            obj_shelf.image_index = 0;
            shelfshake += 1;
        }
    }
    
    if (obj_player2.x &gt;= obj_shelf.x +10) 
    &amp;&amp; (obj_player2.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player2.y &lt;= obj_puzz1.y +74)//&lt;--pushing up the RIGHT side of the shelf
    {   
        if (obj_player2.key_action_press) &amp;&amp; (obj_shelf.image_index != 2)//x button
        {
            obj_shelf.image_index = 2;
            shelfshake += 1;
        }
    }
}

//PLAYER 3 ENTERING SHELF SHAKE AREA
if player3 = true 
&amp;&amp; (obj_player3.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player3.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player3.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player3.y &lt;= obj_puzz1.y +74)  //&lt;---set vertical distance
{    
    if (obj_player3.x &gt;= obj_shelf.x -20)
    &amp;&amp; (obj_player3.x &lt;= obj_shelf.x -10)
    &amp;&amp; (obj_player3.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player3.y &lt;= obj_puzz1.y +74) //&lt;--pushing up the LEFT side of the shelf
    {   
        if (obj_player3.key_action_press) &amp;&amp; (obj_shelf.image_index != 0) //x button
        {
            obj_shelf.image_index = 0;
            shelfshake += 1;
        }
    }
    
    if (obj_player3.x &gt;= obj_shelf.x +10) 
    &amp;&amp; (obj_player3.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player3.y &lt;= obj_puzz1.y +74)//&lt;--pushing up the RIGHT side of the shelf
    {   
        if (obj_player3.key_action_press) &amp;&amp; (obj_shelf.image_index != 2)//x button
        {
            obj_shelf.image_index = 2;
            shelfshake += 1;
        }
    }
}

//PLAYER 4 ENTERING SHELF SHAKE AREA
if player4 = true 
&amp;&amp; (obj_player4.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player4.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player4.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player4.y &lt;= obj_puzz1.y +74)  //&lt;---set vertical distance
{    
    if (obj_player4.x &gt;= obj_shelf.x -20)
    &amp;&amp; (obj_player4.x &lt;= obj_shelf.x -10)
    &amp;&amp; (obj_player4.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player4.y &lt;= obj_puzz1.y +74) //&lt;--pushing up the LEFT side of the shelf
    {   
        if (obj_player4.key_action_press) &amp;&amp; (obj_shelf.image_index != 0) //x button
        {
            obj_shelf.image_index = 0;
            shelfshake += 1;
        }
    }
    
    if (obj_player4.x &gt;= obj_shelf.x +10) 
    &amp;&amp; (obj_player4.y &gt;= obj_puzz1.y +68)
    &amp;&amp; (obj_player4.y &lt;= obj_puzz1.y +74)//&lt;--pushing up the RIGHT side of the shelf
    {   
        if (obj_player4.key_action_press) &amp;&amp; (obj_shelf.image_index != 2)//x button
        {
            obj_shelf.image_index = 2;
            shelfshake += 1;
        }
    }
}

//ACTUAL SHELF SHOOKETHING
if shelfshake &gt;= 15
{
    if instance_exists(obj_puzz1key)
    {
        obj_puzz1key.vspeed = 2;
    }
    obj_shelf.image_index = 1;
}

if instance_exists(obj_puzz1key)
{
    if obj_puzz1key.y &gt;= obj_puzz1.y+67
    {
        obj_puzz1key.vspeed = 0;
    }
}

if !instance_exists(obj_puzz1key)
{
    shelfkeycollected = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player 1 exclamatory stuff
if p1exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player1.x+5,obj_player1.y-6);
}

if player1 = true 
&amp;&amp; (obj_player1.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player1.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player1.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player1.y &lt;= obj_puzz1.y +74)
{
   if shelfkeycollected = false
   {
    p1exclaim = true;
   } 
}

else
{
    p1exclaim = false;
}

//player 2 exclamatory stuff
if p2exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player2.x+5,obj_player2.y-6);
}

if player2 = true 
&amp;&amp; (obj_player2.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player2.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player2.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player2.y &lt;= obj_puzz1.y +74)
{
   if shelfkeycollected = false
   {
    p2exclaim = true;
   } 
}

else
{
    p2exclaim = false;
}

//player 3 exclamatory stuff
if p3exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player3.x+5,obj_player3.y-6);
}

if player3 = true 
&amp;&amp; (obj_player3.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player3.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player3.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player3.y &lt;= obj_puzz1.y +74)
{
   if shelfkeycollected = false
   {
    p3exclaim = true;
   } 
}

else
{
    p3exclaim = false;
}

//player 4 exclamatory stuff
if p4exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player4.x+5,obj_player4.y-6);
}

if player4 = true 
&amp;&amp; (obj_player4.x &gt;= obj_shelf.x -20) //&lt;---set horizontal distance
&amp;&amp; (obj_player4.x &lt;= obj_shelf.x +20)
&amp;&amp; (obj_player4.y &gt;= obj_puzz1.y +68)
&amp;&amp; (obj_player4.y &lt;= obj_puzz1.y +74)
{
   if shelfkeycollected = false
   {
    p4exclaim = true;
   } 
}

else
{
    p4exclaim = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
