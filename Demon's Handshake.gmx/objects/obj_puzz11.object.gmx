<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.playercount = 0;

//CREATE BELT LEVER 1
if !instance_exists(obj_belt_lever3)
{
    instance_create(obj_puzz11.x + 75, obj_puzz11.y + 67,obj_belt_lever3);
}

//CREATE BELT LEVER 2
if !instance_exists(obj_belt_lever2)
{
    instance_create(obj_puzz11.x + 105,obj_puzz11.y + 67,obj_belt_lever2);
}

//CREATE BELT 1
if !instance_exists(obj_belt3)
{
    instance_create(obj_puzz11.x + 30,obj_puzz11.y + 30,obj_belt3);
}

//CREATE BELT 2
if !instance_exists(obj_belt2)
{
    instance_create(obj_puzz11.x + 40,obj_puzz11.y + 40,obj_belt2);
}

//CREATE KEY
if !instance_exists(obj_puzz11key)
{
    instance_create(obj_puzz11.x + 50,obj_puzz11.y + 28,obj_puzz11key);
}

//set player check variables
player1 = false;
player2 = false;
player3 = false;
player4 = false;

keydroppedOnBelt = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GameControls(obj_puzz11); //&lt;-----Initiate controller controls
ObjectControls(obj_puzz11);

// CHECK WHICH PLAYERS ARE IN THE ROOM
if instance_exists(obj_player1)
{
    player1=true;
}
if instance_exists(obj_player2)
{
    player2=true;
}
if instance_exists(obj_player3)
{
    player3=true;
}
if instance_exists(obj_player4)
{
    player4=true;
}

obj_belt_lever3.image_index = 1;
obj_belt_lever2.image_index = 1;

//PLAYER 1 ENTERING EITHER BELT LEVER ACTIONS
if (player1 = true and obj_player1.x &gt;= obj_belt_lever3.x-10 and obj_player1.x &lt;= obj_belt_lever3.x+10)and
   (player1 = true and obj_player1.y = obj_belt_lever2.y+3) or
   (player1 = true and obj_player1.x &gt;= obj_belt_lever2.x-10 and obj_player1.x &lt;= obj_belt_lever2.x+10) and
   (player1 = true and obj_player1.y = obj_belt_lever2.y+3)
{
    instance_create(obj_player1.x+5,obj_player1.y-6,obj_P1exclaim);
} 
else
{
    instance_destroy(obj_P1exclaim);
}
    
//PLAYER 2 ENTERING EITHER BELT LEVER ACTIONS
if (player2 = true and obj_player2.x &gt;= obj_belt_lever3.x-10 and obj_player2.x &lt;= obj_belt_lever3.x+10)and
   (player2 = true and obj_player2.y = obj_belt_lever2.y+3) or
   (player2 = true and obj_player2.x &gt;= obj_belt_lever2.x-10 and obj_player2.x &lt;= obj_belt_lever2.x+10)and
   (player2 = true and obj_player2.y = obj_belt_lever2.y+3)
    {
    instance_create(obj_player2.x+5,obj_player2.y-6,obj_P2exclaim);
    } else
    {
    instance_destroy(obj_P2exclaim);
    }

//PLAYER 3 ENTERING EITHER BELT LEVER ACTIONS
if (player3 = true and obj_player3.x &gt;= obj_belt_lever3.x-10 and obj_player3.x &lt;= obj_belt_lever3.x+10)and
   (player3 = true and obj_player3.y = obj_belt_lever2.y+3) or
   (player3 = true and obj_player3.x &gt;= obj_belt_lever2.x-10 and obj_player3.x &lt;= obj_belt_lever2.x+10)and
   (player3 = true and obj_player3.y = obj_belt_lever2.y+3)
    {
    instance_create(obj_player3.x+5,obj_player3.y-6,obj_P3exclaim);
    } else
    {
    instance_destroy(obj_P3exclaim);
    }
    
//PLAYER 4 ENTERING EITHER BELT LEVER ACTIONS
if (player4 = true and obj_player4.x &gt;= obj_belt_lever3.x-10 and obj_player4.x &lt;= obj_belt_lever3.x+10)and
   (player4 = true and obj_player4.y = obj_belt_lever2.y+3) or
   (player4 = true and obj_player4.x &gt;= obj_belt_lever2.x-10 and obj_player4.x &lt;= obj_belt_lever2.x+10)and
   (player4 = true and obj_player4.y = obj_belt_lever2.y+3)
    {
    instance_create(obj_player4.x+5,obj_player4.y-6,obj_P4exclaim);
    } else
    {
    instance_destroy(obj_P4exclaim);
    }

    
if (!keydroppedOnBelt)
{
    if (player1 = true and obj_player1.x &gt;= obj_belt_lever2.x-10 and obj_player1.x &lt;= obj_belt_lever2.x+10 and obj_player1.key_action) or
     (player2 = true and obj_player2.x &gt;= obj_belt_lever2.x-10 and obj_player2.x &lt;= obj_belt_lever2.x+10 and obj_player2.key_action) or
     (player3 = true and obj_player3.x &gt;= obj_belt_lever2.x-10 and obj_player3.x &lt;= obj_belt_lever2.x+10 and obj_player3.key_action) or
     (player4 = true and obj_player4.x &gt;= obj_belt_lever2.x-10 and obj_player4.x &lt;= obj_belt_lever2.x+10 and obj_player4.key_action) and
     obj_puzz11key.y &gt;= obj_puzz11.y + 38
    {
        obj_belt2.image_speed = .25;
    }
    else
    {
        obj_belt2.image_speed = 0;
    }

    //PLAYERS 1 - 4 ACTIVATING BELT LEVER ACTIONS
    if (player1 = true and obj_player1.x &gt;= obj_belt_lever3.x-10 and obj_player1.x &lt;= obj_belt_lever3.x+10 and obj_player1.key_action) or
     (player2 = true and obj_player2.x &gt;= obj_belt_lever3.x-10 and obj_player2.x &lt;= obj_belt_lever3.x+10 and obj_player2.key_action) or
     (player3 = true and obj_player3.x &gt;= obj_belt_lever3.x-10 and obj_player3.x &lt;= obj_belt_lever3.x+10 and obj_player3.key_action) or
     (player4 = true and obj_player4.x &gt;= obj_belt_lever3.x-10 and obj_player4.x &lt;= obj_belt_lever3.x+10 and obj_player4.key_action)
    {
        obj_belt_lever3.image_index = 0;
        obj_belt3.image_speed = -.25;
        
        if instance_exists(obj_puzz11key)
        {
            obj_puzz11key.hspeed = .25
        }
    } 
    else
    {
        if instance_exists(obj_puzz11key)
        {
            obj_belt3.image_speed = 0;
            obj_puzz11key.hspeed = 0
        }
    
    }
    
    //ACTUAL BELT MOVEMENT
    if instance_exists(obj_puzz11key)
    { 
        if obj_puzz11key.x &gt;= obj_puzz11.x + 120
        {
            obj_puzz11key.vspeed = 2;
            obj_puzz11key.hspeed = 0;
        }
        
        if obj_puzz11key.y &gt;= obj_puzz11.y + 38
        {
            keydroppedOnBelt = true;
            obj_puzz11key.vspeed = 0;
            obj_puzz11key.hspeed = 0;
        }
    }
}

if (keydroppedOnBelt)
{

    obj_belt3.image_speed = 0;
    
    if (player1 = true and obj_player1.x &gt;= obj_belt_lever3.x-10 and obj_player1.x &lt;= obj_belt_lever3.x+10 and obj_player1.key_action) or
     (player2 = true and obj_player2.x &gt;= obj_belt_lever3.x-10 and obj_player2.x &lt;= obj_belt_lever3.x+10 and obj_player2.key_action) or
     (player3 = true and obj_player3.x &gt;= obj_belt_lever3.x-10 and obj_player3.x &lt;= obj_belt_lever3.x+10 and obj_player3.key_action) or
     (player4 = true and obj_player4.x &gt;= obj_belt_lever3.x-10 and obj_player4.x &lt;= obj_belt_lever3.x+10 and obj_player4.key_action)
    {
        obj_belt3.image_speed = -.25;
    }
    else
    {
        obj_belt3.image_speed = 0;
    }

    if (player1 = true and obj_player1.x &gt;= obj_belt_lever2.x-10 and obj_player1.x &lt;= obj_belt_lever2.x+10 and obj_player1.key_action) or
     (player2 = true and obj_player2.x &gt;= obj_belt_lever2.x-10 and obj_player2.x &lt;= obj_belt_lever2.x+10 and obj_player2.key_action) or
     (player3 = true and obj_player3.x &gt;= obj_belt_lever2.x-10 and obj_player3.x &lt;= obj_belt_lever2.x+10 and obj_player3.key_action) or
     (player4 = true and obj_player4.x &gt;= obj_belt_lever2.x-10 and obj_player4.x &lt;= obj_belt_lever2.x+10 and obj_player4.key_action) and
     obj_puzz11key.y &gt;= obj_puzz11.y + 38
    {
        obj_belt_lever2.image_index = 2;
        obj_belt2.image_speed = .25;
        
        if instance_exists(obj_puzz11key)
        {
            obj_puzz11key.hspeed = -.25
        }
    }
    else
    {
        if instance_exists(obj_puzz11key)
        {
            obj_belt2.image_speed = 0;
            obj_puzz11key.hspeed = 0;
        }
    }
    
    //ACTUAL BELT MOVEMENT
    if instance_exists(obj_puzz11key)
    { 
        if obj_puzz11key.x &lt;= obj_puzz11.x + 40
        {
            obj_puzz11key.vspeed = 2
            obj_puzz11key.hspeed = 0
        }
        
        if obj_puzz11key.y &gt;= obj_puzz11.y + 68
        {
            //keydroppedOnBelt = true;
            obj_puzz11key.vspeed = 0;
            obj_puzz11key.hspeed = 0;
        }
    }
}
     
//KEY IS GONE, NO MORE BELT MOVEMENT
if !instance_exists(obj_puzz11key)
{
    if instance_exists(obj_P1exclaim)
    {
        instance_destroy(obj_P1exclaim);
    }
        if instance_exists(obj_P2exclaim)
    {
        instance_destroy(obj_P2exclaim);
    }
        if instance_exists(obj_P3exclaim)
    {
        instance_destroy(obj_P3exclaim);
    }
        if instance_exists(obj_P4exclaim)
    {
        instance_destroy(obj_P4exclaim);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
