<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(obj_puzz2.x+80,obj_puzz2.y+63,obj_piani);
keymade = false;

//interaction icon
p1exclaim = false;
p2exclaim = false;
p3exclaim = false;
p4exclaim = false;

a_lift = false;
b_lift = false;

full_piani_lift = false;
keycollected = false;

//set player check variables
player1 = false;
player2 = false;
player3 = false;
player4 = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//much of this code is greasy, but don't worry, it works. next puzzle. NEXT. PUZZLE.

// CHECK WHICH PLAYERS ARE IN THE ROOM
if instance_exists(obj_player1)
{
    player1=true;
}
if instance_exists(obj_player2)
{
    player2=true;
}
if instance_exists(obj_player3)
{
    player3=true;
}
if instance_exists(obj_player4)
{
    player4=true;
}


GameControls(obj_puzz2); //&lt;-----Initiate controller controls

//Lifting the Piani
    
if player1=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player1.x &gt;= obj_piani.x -25 &amp;&amp; obj_player1.x &lt;= obj_piani.x-20) //&lt;-- x position param
   &amp;&amp; (obj_player1.y = obj_piani.y +7) //&lt;--- y position param
   &amp;&amp; obj_player1.key_action_press //&lt;--------------------------------------------------------key action param
{
    a_lift = true;
    obj_player1.state = 'aim'  //&lt;------------------LIFT THE PIANI SIDE A (LEFT)
}

else if player1=true 
   &amp;&amp; (obj_player1.x &gt;= obj_piani.x -25 &amp;&amp; obj_player1.x &lt;= obj_piani.x-20) 
   &amp;&amp; (obj_player1.y = obj_piani.y +7)
   &amp;&amp; obj_player1.state = 'aim'
   &amp;&amp; obj_player1.key_action_release //DROP THE PIANI
{
    a_lift = false;
    obj_player1.state = 'idle'
}

if player1=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player1.x &gt;= obj_piani.x +22 &amp;&amp; obj_player1.x &lt;= obj_piani.x +27)
   &amp;&amp; (obj_player1.y = obj_piani.y +7)
   &amp;&amp; obj_player1.key_action_press //&lt;-------------LIFT THE PIANI SIDE B (RIGHT
{
    b_lift = true
    obj_player1.state = 'aim'
}

else if player1=true 
   &amp;&amp; (obj_player1.x &gt;= obj_piani.x +22 &amp;&amp; obj_player1.x &lt;= obj_piani.x +27) 
   &amp;&amp; (obj_player1.y = obj_piani.y +7)
   &amp;&amp; obj_player1.state = 'aim'
   &amp;&amp; obj_player1.key_action_release //DROP THE PIANI
{
    b_lift = false;
    obj_player1.state = 'idle'
}




//Lifting the Piani  player 2
  
if player2=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player2.x &gt;= obj_piani.x -25 &amp;&amp; obj_player2.x &lt;= obj_piani.x-20) //&lt;-- x position param
   &amp;&amp; (obj_player2.y = obj_piani.y +7) //&lt;--- y position param
   &amp;&amp; obj_player2.key_action_press //&lt;--------------------------------------------------------key action param
{
    a_lift = true;
    obj_player2.state = 'aim'  //&lt;------------------LIFT THE PIANI SIDE A (LEFT)
}

else if player2=true 
   &amp;&amp; (obj_player2.x &gt;= obj_piani.x -25 &amp;&amp; obj_player2.x &lt;= obj_piani.x-20) 
   &amp;&amp; (obj_player2.y = obj_piani.y +7)
   &amp;&amp; obj_player2.state = 'aim'
   &amp;&amp; obj_player2.key_action_release //DROP THE PIANI
{
    a_lift = false;
    obj_player2.state = 'idle'
}

if player2=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player2.x &gt;= obj_piani.x +22 &amp;&amp; obj_player2.x &lt;= obj_piani.x +27)
   &amp;&amp; (obj_player2.y = obj_piani.y +7)
   &amp;&amp; obj_player2.key_action_press //&lt;-------------LIFT THE PIANI SIDE B (RIGHT
{
    b_lift = true
    obj_player2.state = 'aim'
}

else if player2=true 
   &amp;&amp; (obj_player2.x &gt;= obj_piani.x +22 &amp;&amp; obj_player2.x &lt;= obj_piani.x +27) 
   &amp;&amp; (obj_player2.y = obj_piani.y +7)
   &amp;&amp; obj_player2.state = 'aim'
   &amp;&amp; obj_player2.key_action_release //DROP THE PIANI
{
    b_lift = false;
    obj_player2.state = 'idle'
}



//Lifting the Piani player 3
    
if player3=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player3.x &gt;= obj_piani.x -25 &amp;&amp; obj_player3.x &lt;= obj_piani.x-20) //&lt;-- x position param
   &amp;&amp; (obj_player3.y = obj_piani.y +7) //&lt;--- y position param
   &amp;&amp; obj_player3.key_action_press //&lt;--------------------------------------------------------key action param
{
    a_lift = true;
    obj_player3.state = 'aim'  //&lt;------------------LIFT THE PIANI SIDE A (LEFT)
}

if player3=true 
   &amp;&amp; (obj_player3.x &gt;= obj_piani.x -25 &amp;&amp; obj_player3.x &lt;= obj_piani.x-20) 
   &amp;&amp; (obj_player3.y = obj_piani.y +7)
   &amp;&amp; obj_player3.key_action_release //DROP THE PIANI
{
    a_lift = false;
    obj_player3.state = 'idle'
}

if player3=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player3.x &gt;= obj_piani.x +22 &amp;&amp; obj_player3.x &lt;= obj_piani.x +27)
   &amp;&amp; (obj_player3.y = obj_piani.y +7)
   &amp;&amp; obj_player3.key_action_press //&lt;-------------LIFT THE PIANI SIDE B (RIGHT
{
    b_lift = true
    obj_player3.state = 'aim'
}

if player3=true 
   &amp;&amp; (obj_player3.x &gt;= obj_piani.x +22 &amp;&amp; obj_player3.x &lt;= obj_piani.x +27) 
   &amp;&amp; (obj_player3.y = obj_piani.y +7)
   &amp;&amp; obj_player3.key_action_release //DROP THE PIANI
{
    b_lift = false;
    obj_player3.state = 'idle';
}







//Lifting the Piani player4
    
if player4=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player4.x &gt;= obj_piani.x -25 &amp;&amp; obj_player4.x &lt;= obj_piani.x-20) //&lt;-- x position param
   &amp;&amp; (obj_player4.y = obj_piani.y +7) //&lt;--- y position param
   &amp;&amp; obj_player4.key_action_press //&lt;--------------------------------------------------------key action param
{
    a_lift = true;
    obj_player4.state = 'aim'  //&lt;------------------LIFT THE PIANI SIDE A (LEFT)
}

if player4=true 
   &amp;&amp; (obj_player4.x &gt;= obj_piani.x -25 &amp;&amp; obj_player4.x &lt;= obj_piani.x-20) 
   &amp;&amp; (obj_player4.y = obj_piani.y +7)
   &amp;&amp; obj_player4.key_action_release //DROP THE PIANI
{
    a_lift = false;
    obj_player4.state = 'idle'
}

if player4=true &amp;&amp; keycollected = false
   &amp;&amp; (obj_player4.x &gt;= obj_piani.x +22 &amp;&amp; obj_player4.x &lt;= obj_piani.x +27)
   &amp;&amp; (obj_player4.y = obj_piani.y +7)
   &amp;&amp; obj_player4.key_action_press //&lt;-------------LIFT THE PIANI SIDE B (RIGHT
{
    b_lift = true
    obj_player3.state = 'aim'
}

if player4=true 
   &amp;&amp; (obj_player4.x &gt;= obj_piani.x +22 &amp;&amp; obj_player4.x &lt;= obj_piani.x +27) 
   &amp;&amp; (obj_player4.y = obj_piani.y +7)
   &amp;&amp; obj_player4.key_action_release //DROP THE PIANI
{
    b_lift = false;
    obj_player4.state = 'idle'
}





//Make key appear / piano gets lifted

if a_lift = true &amp;&amp; b_lift = true
{
    full_piani_lift = true;
}

if a_lift = false || b_lift = false
{
    full_piani_lift = false;
}

if full_piani_lift = true
{
    obj_piani.y = obj_puzz2.y + 59;
    if !instance_exists(obj_puzz2key) &amp;&amp; keymade = false &amp;&amp; keycollected = false
    {
        instance_create(obj_piani.x,obj_piani.y+8,obj_puzz2key);                //&lt;-----Create decoy key
        keymade = true;
    }
}

else if full_piani_lift = false
{
    keymade = false;
    obj_piani.y = obj_puzz2.y + 63;
    if instance_exists(obj_puzz2key)
    {
        instance_destroy(obj_puzz2key);
    }
}

if keymade = true
{
    if (position_meeting(obj_piani.x,obj_piani.y+8,obj_player1) || 
       position_meeting(obj_piani.x,obj_piani.y+8,obj_player2) || 
       position_meeting(obj_piani.x,obj_piani.y+8,obj_player3) || 
       position_meeting(obj_piani.x,obj_piani.y+8,obj_player4))
    {
        keycollected = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player 1 exclamatory stuff
if p1exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player1.x+5,obj_player1.y-6);
}

if player1 = true 
&amp;&amp;(obj_player1.x &gt;= obj_piani.x -25 &amp;&amp; obj_player1.x &lt;= obj_piani.x-20) 
&amp;&amp;(obj_player1.y = obj_piani.y+7)
||(player1=true) 
&amp;&amp;(obj_player1.x &gt;= obj_piani.x +22 &amp;&amp; obj_player1.x &lt;= obj_piani.x +27)
&amp;&amp;(obj_player1.y = obj_piani.y+7)
{
   if keycollected = false
   {
    p1exclaim = true;
   } 
}

else
{
    p1exclaim = false;
}

//player 2 exclamatory stuff
if p2exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player2.x+5,obj_player2.y-6);
}

if player2 = true 
&amp;&amp;(obj_player2.x &gt;= obj_piani.x -25 &amp;&amp; obj_player2.x &lt;= obj_piani.x-20) 
&amp;&amp;(obj_player2.y = obj_piani.y+7)
||(player2=true) 
&amp;&amp;(obj_player2.x &gt;= obj_piani.x +22 &amp;&amp; obj_player2.x &lt;= obj_piani.x +27)
&amp;&amp;(obj_player2.y = obj_piani.y+7)
{
   if keycollected = false
   {
    p2exclaim = true;
   } 
}

else
{
    p2exclaim = false;
}


//player 3 exclamatory stuff
if p3exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player3.x+5,obj_player3.y-6);
}

if player3 = true 
&amp;&amp;(obj_player3.x &gt;= obj_piani.x -25 &amp;&amp; obj_player3.x &lt;= obj_piani.x-20) 
&amp;&amp;(obj_player3.y = obj_piani.y+7)
||(player3=true) 
&amp;&amp;(obj_player3.x &gt;= obj_piani.x +22 &amp;&amp; obj_player3.x &lt;= obj_piani.x +27)
&amp;&amp;(obj_player3.y = obj_piani.y+7)
{
   if keycollected = false
   {
    p3exclaim = true;
   } 
}

else
{
    p3exclaim = false;
}

//player 4 exclamatory stuff
if p4exclaim = true
{
    draw_sprite(spr_exclaim,image_index,obj_player4.x+5,obj_player4.y-6);
}

if player4 = true 
&amp;&amp;(obj_player4.x &gt;= obj_piani.x -25 &amp;&amp; obj_player4.x &lt;= obj_piani.x-20) 
&amp;&amp;(obj_player4.y = obj_piani.y+7)
||(player4=true) 
&amp;&amp;(obj_player4.x &gt;= obj_piani.x +22 &amp;&amp; obj_player4.x &lt;= obj_piani.x +27)
&amp;&amp;(obj_player4.y = obj_piani.y+7)
{
   if keycollected = false
   {
    p4exclaim = true;
   } 
}

else
{
    p4exclaim = false;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
