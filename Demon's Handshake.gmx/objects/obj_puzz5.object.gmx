<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lever = 0; //When this variable hits 10 the key will fall to the ground
global.playercount = 0;

//CREATE PLUNGER
if !instance_exists(obj_lever)
{
    instance_create(obj_puzz5.x + 75, obj_puzz5.y + 65, obj_lever);
}

//CREATE KEY
if !instance_exists(obj_key)
{
    instance_create(obj_lever.x,obj_lever.y-30,obj_key);
}

//set player check variables
player1 = false;
player2 = false;
player3 = false;
player4 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GameControls(obj_puzz5); //&lt;-----Initiate controller controls
ObjectControls(obj_puzz5)

// CHECK WHICH PLAYERS ARE IN THE ROOM
if instance_exists(obj_player1)
{
    player1=true;
}
if instance_exists(obj_player2)
{
    player2=true;
}
if instance_exists(obj_player3)
{
    player3=true;
}
if instance_exists(obj_player4)
{
    player4=true;
}

//PLAYER 1 ENTERING LEVER AREA
if player1 = true &amp;&amp; obj_player1.x &gt;= obj_lever.x-10 &amp;&amp; obj_player1.x &lt;= obj_lever.x+10
{
    if !instance_exists(obj_P1exclaim) //makes action cue appear
    {
        instance_create(obj_player1.x+5,obj_player1.y-6,obj_P1exclaim);   
    }
    
    if obj_player1.x &gt;= obj_lever.x-10 &amp;&amp; obj_player1.x &lt;= obj_lever.x //&lt;--pushing up the LEFT side of the lever
    {   
        if (obj_player1.key_action_press) &amp;&amp; (obj_lever.image_index != 1) &amp;&amp; global.playercount &gt;= 2 //x button
        {
            obj_lever.image_index = 1;
            lever += 1;
        }
    }
    
    if obj_player1.x &gt;= obj_lever.x &amp;&amp; obj_player1.x &lt;= obj_lever.x+10 //&lt;--pushing up the RIGHT side of the lever
    {   
        if (obj_player1.key_action_press) &amp;&amp; (obj_lever.image_index != 2) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 2;
            lever += 1;
        }
    }
}
/*
else
{
        if instance_exists(obj_P1exclaim) //gets rid of action cue
        {
            instance_destroy(obj_P1exclaim);
        }
}
*/
//PLAYER 2 ENTERING LEVER AREA
if player2 = true &amp;&amp; obj_player2.x &gt;= obj_lever.x-10 &amp;&amp; obj_player2.x &lt;= obj_lever.x+10
{
    if !instance_exists(obj_P2exclaim)
    {
        instance_create(obj_player2.x+5,obj_player2.y-6,obj_P2exclaim);
    }
    

    if obj_player2.x &gt;= obj_lever.x-10 &amp;&amp; obj_player2.x &lt;= obj_lever.x //&lt;--pushing up the LEFT side of the lever
    {   
        if (obj_player2.key_action_press) &amp;&amp; (obj_lever.image_index != 1) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 1;
            lever += 1;
        }
    }
    
    if obj_player2.x &gt;= obj_lever.x &amp;&amp; obj_player2.x &lt;= obj_lever.x+10 //&lt;--pushing up the RIGHT side of the lever
    {   
        if (obj_player2.key_action_press) &amp;&amp; (obj_lever.image_index != 2) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 2;
            lever += 1;
        }
    }
}
/*
else
{
    if instance_exists(obj_P2exclaim)
    {
        instance_destroy(obj_P2exclaim);
    }
}
*/
//PLAYER 3 ENTERING LEVER AREA
if player3 = true &amp;&amp; obj_player3.x &gt;= obj_lever.x -10 &amp;&amp; obj_player3.x &lt;= obj_lever.x+10
{
    if !instance_exists(obj_P3exclaim)
    {
        instance_create(obj_player3.x+5,obj_player3.y-6,obj_P3exclaim);
    }
    if obj_player3.x &gt;= obj_lever.x-10 &amp;&amp; obj_player3.x &lt;= obj_lever.x //&lt;--pushing up the LEFT side of the lever
    {   
        if (obj_player3.key_action_press) &amp;&amp; (obj_lever.image_index != 1) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 1;
            lever += 1;
        }
    }
    
    if obj_player3.x &gt;= obj_lever.x &amp;&amp; obj_player3.x &lt;= obj_lever.x+10 //&lt;--pushing up the RIGHT side of the lever
    {   
        if (obj_player3.key_action_press) &amp;&amp; (obj_lever.image_index != 2) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 2;
            lever += 1;
        }
    }
}
/*
else
{
        if instance_exists(obj_P3exclaim)
        {
            instance_destroy(obj_P3exclaim);
        }
}
*/
//PLAYER 4 ENTERING LEVER AREA
if player4 = true &amp;&amp; obj_player4.x &gt;= obj_lever.x -10 &amp;&amp; obj_player4.x &lt;= obj_lever.x+10
{
    if !instance_exists(obj_P4exclaim)
    {
        instance_create(obj_player4.x+5,obj_player4.y-6,obj_P4exclaim);
    }
    if obj_player4.x &gt;= obj_lever.x-10 &amp;&amp; obj_player4.x &lt;= obj_lever.x //&lt;--pushing up the LEFT side of the lever
    {   
        if (obj_player4.key_action_press) &amp;&amp; (obj_lever.image_index != 1) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 1;
            lever += 1;
        }
    }
    
    if obj_player4.x &gt;= obj_lever.x &amp;&amp; obj_player4.x &lt;= obj_lever.x+10 //&lt;--pushing up the RIGHT side of the lever
    {   
        if (obj_player4.key_action_press) &amp;&amp; (obj_lever.image_index != 2) &amp;&amp; global.playercount &gt;= 2//x button
        {
            obj_lever.image_index = 2;
            lever += 1;
        }
    }
}
/*
else
{
        if instance_exists(obj_P4exclaim)
        {
            instance_destroy(obj_P4exclaim);
        }
}
*/
//ACTUAL LEVER LEVERAGING
if lever &gt;= 10
{
    if instance_exists(obj_key)
    {
        obj_key.vspeed = 2;
    }
    obj_lever.image_index = 1;
}

if instance_exists(obj_key)
{
    if obj_key.y &gt;= 69
    {
        obj_key.vspeed = 0;
    }
}

//KEY IS GONE, NO MORE LEVER LEVERAGE CUES
if !instance_exists(obj_key)
{
    if instance_exists(obj_P1exclaim)
    {
        instance_destroy(obj_P1exclaim);
    }
        if instance_exists(obj_P2exclaim)
    {
        instance_destroy(obj_P2exclaim);
    }
        if instance_exists(obj_P3exclaim)
    {
        instance_destroy(obj_P3exclaim);
    }
        if instance_exists(obj_P4exclaim)
    {
        instance_destroy(obj_P4exclaim);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
